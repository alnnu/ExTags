generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL_LOCAL")
}

model faz {
  id           Int     @id @default(autoincrement())
  tarefa_id    Int?
  pessoa_email String?
  pessoa       pessoa? @relation(fields: [pessoa_email], references: [email], onUpdate: NoAction, map: "fk_faz_2")
  tarefa       tarefa? @relation(fields: [tarefa_id], references: [id], onUpdate: NoAction, map: "fk_faz_1")
}

model nota {
  nome         String?
  texto        String?
  data         DateTime? @db.Date
  id           Int       @id @default(autoincrement())
  projeto_id   Int?
  pessoa_email String?
  pessoa       pessoa?   @relation(fields: [pessoa_email], references: [email], onDelete: Cascade, onUpdate: NoAction, map: "fk_nota_3")
  projeto      projeto?  @relation(fields: [projeto_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_nota_2")
}

model participa {
  pessoa_email String
  projeto_id   Int
  pessoa       pessoa  @relation(fields: [pessoa_email], references: [email], onDelete: Cascade, onUpdate: NoAction, map: "fk_participa_1")
  projeto      projeto @relation(fields: [projeto_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_participa_2")

  @@id([pessoa_email, projeto_id], map: "pk_par")
}

model pessoa {
  email     String      @id
  password  String?
  username  String?
  faz       faz[]
  nota      nota[]
  participa participa[]
  processo  processo[]
  projeto   projeto[]
  tarefa    tarefa[]
}

model processo {
  log          String?
  log_data     String?
  id           Int     @id @default(autoincrement())
  pessoa_email String?
  tarefa_id    Int?
  pessoa       pessoa? @relation(fields: [pessoa_email], references: [email], onDelete: Cascade, onUpdate: NoAction, map: "fk_processo_2")
  tarefa       tarefa? @relation(fields: [tarefa_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_processo_3")
}

model projeto {
  nome          String?
  id            Int         @id @default(autoincrement())
  dia           Decimal?    @db.Decimal
  mes           Decimal?    @db.Decimal
  ano           Decimal?    @db.Decimal
  estado        Decimal?    @db.Decimal
  gerente_email String?
  pessoa        pessoa?     @relation(fields: [gerente_email], references: [email], onDelete: Cascade, onUpdate: NoAction, map: "fk_projeto_2")
  nota          nota[]
  participa     participa[]
  tarefa        tarefa[]
}

model tarefa {
  data         DateTime?  @db.Date
  descricao    String?
  prioridade   Decimal?   @db.Decimal
  estado       Decimal?   @db.Decimal
  estimativa   Decimal?   @db.Decimal
  id           Int        @id @default(autoincrement())
  nome         String?
  projeto_id   Int?
  pessoa_email String?
  pessoa       pessoa?    @relation(fields: [pessoa_email], references: [email], onDelete: NoAction, onUpdate: NoAction, map: "fk_tarefa_3")
  projeto      projeto?   @relation(fields: [projeto_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_tarefa_2")
  faz          faz[]
  processo     processo[]
}
